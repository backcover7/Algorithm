class Solution(object):
    def searchMatrix(self, matrix, target):
        """
        :type matrix: List[List[int]]
        :type target: int
        :rtype: bool
        """
        if not matrix or (len(matrix)==1 and not matrix[0]):
            return False
        if target < matrix[0][0] or target > matrix[-1][-1]:
            return False
        def searchRow(matrix, target):
            if len(matrix) == 1 and target not in matrix[0]:
                return False
            mid = (0 + len(matrix)) / 2
            if target in matrix[mid]:
                return True
            elif target < matrix[mid][0]:
                return searchRow(matrix[:mid], target)
            elif target > matrix[mid][-1] and mid <= len(matrix) - 2:
                    return searchRow(matrix[mid+1:], target)
            else: return False
        return searchRow(matrix, target)

m = [
    [
        -10,
        -9,
        -9,
        -9,
        -9,
        -7,
        -7,
        -6
    ],
    [
        -4,
        -2,
        -1,
        0,
        0,
        0,
        2,
        3
    ],
    [
        4,
        4,
        5,
        7,
        7,
        8,
        8,
        10
    ],
    [
        12,
        12,
        12,
        14,
        14,
        15,
        15,
        16
    ],
    [
        17,
        18,
        20,
        22,
        22,
        22,
        23,
        24
    ],
    [
        27,
        29,
        30,
        32,
        33,
        33,
        34,
        35
    ],
    [
        36,
        36,
        37,
        37,
        38,
        39,
        39,
        41
    ],
    [
        43,
        44,
        44,
        46,
        46,
        47,
        48,
        48
    ],
    [
        51,
        51,
        53,
        53,
        54,
        54,
        55,
        56
    ],
    [
        58,
        58,
        59,
        61,
        61,
        63,
        63,
        64
    ],
    [
        65,
        67,
        69,
        71,
        72,
        72,
        72,
        74
    ],
    [
        77,
        77,
        79,
        81,
        82,
        82,
        84,
        85
    ],
    [
        88,
        88,
        89,
        90,
        90,
        90,
        92,
        94
    ],
    [
        96,
        97,
        98,
        100,
        101,
        103,
        104,
        106
    ],
    [
        108,
        108,
        110,
        111,
        112,
        114,
        115,
        115
    ],
    [
        116,
        117,
        117,
        119,
        121,
        121,
        121,
        123
    ],
    [
        124,
        125,
        125,
        126,
        127,
        127,
        128,
        130
    ],
    [
        132,
        132,
        134,
        134,
        136,
        137,
        137,
        139
    ],
    [
        142,
        142,
        142,
        143,
        143,
        144,
        146,
        146
    ],
    [
        147,
        147,
        149,
        150,
        151,
        151,
        151,
        153
    ],
    [
        155,
        156,
        157,
        159,
        160,
        160,
        160,
        160
    ],
    [
        162,
        162,
        164,
        165,
        166,
        166,
        166,
        167
    ],
    [
        168,
        169,
        169,
        170,
        171,
        172,
        174,
        176
    ],
    [
        178,
        180,
        180,
        180,
        182,
        183,
        183,
        183
    ],
    [
        186,
        187,
        187,
        188,
        190,
        190,
        192,
        192
    ],
    [
        193,
        194,
        195,
        197,
        198,
        198,
        200,
        202
    ],
    [
        205,
        207,
        207,
        207,
        207,
        207,
        207,
        209
    ],
    [
        212,
        212,
        212,
        213,
        215,
        215,
        216,
        217
    ],
    [
        220,
        222,
        222,
        224,
        224,
        224,
        226,
        228
    ],
    [
        230,
        231,
        233,
        234,
        235,
        236,
        236,
        237
    ],
    [
        240,
        242,
        244,
        244,
        246,
        246,
        247,
        249
    ],
    [
        252,
        253,
        254,
        255,
        257,
        258,
        258,
        260
    ],
    [
        262,
        262,
        263,
        264,
        265,
        266,
        266,
        266
    ],
    [
        269,
        270,
        272,
        274,
        276,
        276,
        277,
        279
    ],
    [
        282,
        282,
        283,
        283,
        285,
        287,
        287,
        288
    ],
    [
        290,
        291,
        293,
        294,
        296,
        296,
        296,
        297
    ],
    [
        299,
        301,
        301,
        301,
        302,
        303,
        304,
        305
    ],
    [
        308,
        308,
        309,
        309,
        310,
        312,
        312,
        313
    ],
    [
        314,
        315,
        316,
        318,
        318,
        320,
        321,
        321
    ],
    [
        323,
        324,
        325,
        326,
        327,
        329,
        330,
        330
    ],
    [
        333,
        334,
        335,
        336,
        336,
        338,
        338,
        339
    ],
    [
        341,
        343,
        344,
        346,
        348,
        350,
        351,
        353
    ],
    [
        355,
        355,
        355,
        357,
        357,
        358,
        360,
        362
    ],
    [
        363,
        364,
        366,
        368,
        369,
        369,
        369,
        370
    ],
    [
        372,
        374,
        376,
        378,
        380,
        380,
        380,
        381
    ],
    [
        384,
        385,
        386,
        387,
        389,
        391,
        393,
        394
    ],
    [
        395,
        395,
        395,
        396,
        398,
        399,
        399,
        399
    ],
    [
        400,
        402,
        402,
        403,
        405,
        405,
        407,
        408
    ],
    [
        409,
        409,
        410,
        410,
        410,
        411,
        412,
        412
    ]
]
t = 250
S = Solution()
print S.searchMatrix(m, t)